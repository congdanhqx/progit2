=== Cài Đặt Git

Trước khi bắt đầu sử dụng Git, bạn cần phải có nó trong máy tính của bạn.
Kể cả khi nó đã được cài sẵn trong máy, thì cập nhật lên phiên bản mới nhất cũng tốt hơn.
Bạn có thể cài Git bằng các gói (`package` như deb, rpm, v.v... thông qua apt-get, yum, brew, v.v...) hoặc bằng bộ cài đặt, bạn cũng thử tải mã nguồn của Git và tự biên dịch Git.

[NOTE]
====
Cuốn sách này được viết với Git *2.0.0*.
Mặc dù đa số các lệnh được sử dụng trong cuốn sách này có thể hoạt động trong các phiên bản cũ hơn của Git, nhưng một số lệnh có thể không hoạt động, hoặc hoạt động hơi khác nếu như bạn đang sử dụng phiên bản cũ của Git.
Bởi vì Git thể hiện khá tốt trong việc bảo đảm tương thích ngược, tất cả các phiên bản từ 2.0 trở đi đều hoạt động tốt với các ví dụ trong cuốn sách này.
====

==== Cài Đặt Trên Linux

(((Linux, installing)))
Nếu như bạn muốn cài đặt Git trên Linux thông qua một chương trình cài đặt, bạn có thể làm việc này thông qua phần mềm quản lý các gói đi kèm với hệ điều hành (bản phân phối) của bạn.
Nếu bạn đang sử dụng Fedora, bạn có thể dùng `yum`:

[source,console]
----
$ sudo yum install git-all
----

Còn nếu bạn đang sử dụng một bản phân phối dựa trên Debian như Ubuntu, hãy dùng apt-get:

[source,console]
----
$ sudo apt-get install git-all
----

Nếu bạn muốn có thêm nhiều tùy chọn, vui lòng tham khảo hướng dẫn cài đặt trên các hệ thống Unix tại website chính thức của Git http://git-scm.com/download/linux[].

==== Cài Đặt Trên Mac

(((Mac, installing)))
Có rất nhiều cách để cài đặt Git trên Mac.
Cách đơn giản nhất là cài đặt Bộ Công cụ Dòng lệnh Xcode (Xcode Command Line Tools).(((Xcode)))
Với Mavericks (10.9) và các phiên bản mới hơn, bạn có thể làm việc này rất đơn giản bằng cách gọi lệnh 'git' từ Terminal.
Nếu Git chưa được cài đặt, nó sẽ thông báo để bạn cài đặt Git.

Nếu như bạn muốn có một phiên bản được cập nhật tốt hơn, bạn có thể cài nó thông qua bộ cài đặt.
Bộ cài đặt cho OSX được bảo trì và sẵn có để tải về tại website của Git http://git-scm.com/download/mac[].

.Chương trình cài đặt Git cho Mac OS X.
image::images/git-osx-installer.png[Chương trình cài đặt Git cho Mac OS X.]

Bạn cũng có thể cài Git khi bạn cài GitHub for Mac.
Công cụ Git với GUI của GitHub có một tùy chọn cho phép cài đặt phiên bản dòng lệnh.
Bạn có thể tải công cụ đó từ website của `GitHub for Mac` tại http://mac.github.com[].

==== Cài Đặt Trên Windows

Có một vài cách để cài đặt Git trên Windows.(((Windows, installing)))
Phiên bản chính thức có sẵn để tài về website của Git.
Chỉ cần truy cập trang http://git-scm.com/download/win[] và Git sẽ tự động được tải về.
Xin chú ý rằng có một dự án riêng rẽ mang tên `Git for Windows`, dự án này không thuộc về dự án `Git`; để biết thêm thông tin về dự án này, xin mời truy cập https://git-for-windows.github.io/[].

Một cách cũng tương đối dễ dàng khác để cài đặt Git là cài đặt `GitHub for Windows`.
Bộ cài đặt của nó bao gồm một phiên bản dòng lệnh gủa Git cũng như một bản GUI.
`GitHub for Windows` hoạt động tốt với Powershell, `GitHub for Windows` đi kèm với một hệ thống ghi nhớ danh tính hiệu quả và một cấu hình CRLF hợp lý.(((Powershell)))(((CRLF)))(((credential caching)))
Chúng ta sẽ nghiên cứu về những thứ đó sau, nhưng chừng đó cũng đủ để bạn thấy đó là thứ bạn cần.
`GitHub for Windows` có thể được tải về từ http://windows.github.com[].

==== Cài Đặt Từ Mã Nguồn

Sẽ hữu ích hơn nếu bạn có thể cài đặt Git từ mã nguồn, vì bạn sẽ có được phiên bản mới nhất.
Bộ cài đặt thường chậm trễ trong việc phát hành, mặc dù Git đang phát triển trong những năm gần đây, điều này tạo ra một số điểm khác biệt nho nhỏ.

Nếu như bạn thực sự muốn cài Git từ mã nguồn, bạn cần phải có những thư viện mà Git cần sau: autotools, curl, zlib, openssl, expat và libiconv.
Ví dụ, nếu bạn ở trong một hệ thống có sẵn `yum` (như Fedora) hoặc apt-get (như Debian, Ubuntu), thì bạn có thể sử dụng những lệnh sau để cài đặt cái thư viện cần thiết cho việc biên dịch và cài đặt Git:

[source,console]
----
$ sudo yum install dh-autoreconf curl-devel expat-devel gettext-devel \
  openssl-devel perl-devel zlib-devel
$ sudo apt-get install dh-autoreconf libcurl4-gnutls-dev libexpat1-dev \
  gettext libz-dev libssl-dev
----

Để có thêm tài liệu với các định dạng khác nhau (doc, html, info), chúng ta cần thêm những thư viện sau:
In order to be able to add the documentation in various formats (doc, html, info), these additional dependencies are required ():

[source,console]
----
$ sudo yum install asciidoc xmlto docbook2X
$ sudo apt-get install asciidoc xmlto docbook2x
----

NOTE: Nếu bạn sử dụng RHEL và dẫn xuất của RHEL như CentOS và Scientific Linux cần phải https://fedoraproject.org/wiki/EPEL#How_can_I_use_these_extra_packages.3F[bật cho kho chứa EPEL] để tải gói `docbook2X`.

Ngoài ra, nếu bạn sử dụng Fedora/RHEL/dẫn xuất của RHEL, bạn cần phải làm việc này:

[source,console]
----
$ sudo ln -s /usr/bin/db2x_docbook2texi /usr/bin/docbook2x-texi
----

bởi vì tên của tập tin thực thi có sự khác biệt.

Khi mà bạn có đầy đủ các thư viện cần thiết, bạn có thể tiếp tục, lấy bản phát hành-mới nhất-đã được đánh dấu (`tagged`), bản phát hành này có thể lấy từ rất nhiều nơi
Bạn có thể lấy nó từ trang Kernel.org tại https://www.kernel.org/pub/software/scm/git[], hoặc từ mirror trên GitHub tại https://github.com/git/git/releases[].
Nói rõ ràng hơn, phiên bản mới nhất thường có sẵn trên trang GitHub, nhưng trang kernel.org có thêm chữ ký trong trường hợp bạn cần xác nhận lại phiên bản bạn vừa tải về.

Sau đó, biên dịch và cài đặt:

[source,console]
----
$ tar -zxf git-2.0.0.tar.gz
$ cd git-2.0.0
$ make configure
$ ./configure --prefix=/usr
$ make all doc info
$ sudo make install install-doc install-html install-info
----

Khi mà việc này đã hoàn thành, bạn có thể lấy Git về chính Git cho những bản cập nhật:

[source,console]
----
$ git clone git://git.kernel.org/pub/scm/git/git.git
----
