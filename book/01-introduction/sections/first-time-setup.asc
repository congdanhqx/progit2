[[_first_time]]
=== Cấu Hình Lần Đầu Cho Git

Bây giờ, bạn đã có Git trong hệ thống, bạn cần phải làm vài chuyện để tùy biến môi trường của Git cho riêng bạn.
Bạn chỉ phải làm những việc này một lần duy nhất cho mỗi máy tính; những tùy biến này sẽ vẫn còn được lưu giữ qua những lần nâng cấp Git.
Tất nhiên, bạn có thể thay đổi chúng vào bất kỳ thời điểm nào bằng cách chạy lại những lệnh này.

Đi kèm với Git là một công cụ có tên là `git config`, công cụ này cho phép bạn xem và thay đổi các thông số cấu hình để quản lý toàn bộ các khía cạnh của Git như nó ra sao, hoạt động thế nào. (((git commands, config)))
Những thông số đó được lưu ở ba (3) nơi khác nhau:

1. Tập tin `/etc/gitconfig`: Chứa giá trị cho tất cả người dùng trong hệ thống và tất cả kho chứa của họ.
  Nếu như bạn sử dụng tùy chọn `--system` khi gọi `git config`, Git sẽ thực hiện các thao tác đọc và ghi cấu hình trên tập tin này.
2. Tập tin `~/.gitconfig` hoặc `~/.config/git/config`: Dành riêng cho tài khoản của bạn.
  Bạn có thể yêu cầu Git thực hiện các thao tác đọc và ghi trên tập tin này bằng cách sử dụng tùy chọn `--global`.
3. Tập tin `config` trong thư mục Git (tức là tập tin `.git/config`) của bất kỳ kho chứa nào bạn đang dùng: Chỉ áp dụng cho duy nhất kho chứa đó.

Giá trị trong mỗi cấp sẽ ghi đè lên giá trị của cấp trước đó, như vậy giá trị trong `.git/config` sẽ được ưu tiên hơn `/etc/gitconfig`.

Trên Windows, Git dùng tập tin `.gitconfig` trong thư mục `$HOME` (`%USERPROFILE%` trên môi trường Windows), cụ thể hơn đó là `C:\Documents and Settings\$USER` hoặc `C:\Users\$USER`, tuỳ thuộc vào phiên bản Windows đang sử dụng (`$USER` là `%USERNAME%` trên môi trường Windows).
Nó cũng sử dụng tập tin `/etc/gitconfig`, mặc dù tập tin đó đã được cấu hình sẵn bằng một đường dẫn tương đối so với thư mục gốc của MSys, thư mục gốc của MSys là nơi bạn chọn khi cài đặt Git trên hệ thống Windows của bạn.
Nếu bạn sử dụng phiên bản 2.x hoặc mới hơn của Git cho Windows (`Git for Windows`), còn có thêm một tập tin cấu hình ở cấp độ hệ thống (cấp độ 1) ở
`C:\Documents and Settings\All Users\Application Data\Git\config` trên Windows XP, và trong `C:\ProgramData\Git\config` trên Windows Vista và các phiên bản Windows mới hơn.
Tập tin cấu hình này chỉ có thể thay đổi bằng cách gọi `git config -f <file>` bởi một quản trị viên.

==== Danh Tính Của Bạn

Việc đầu tiên bạn nên làm khi cấu hình Git là thiết lập tên tài khoản và địa chỉ e-mail.
Điều này rất quan trọng vì Git sẽ sử dụng những thông tin đó mỗi khi chuyển giao (`commit`), Một khi bạn đã bắt đầu việc chuyển giao, thì chúng không thể bị thay đổi được nữa:

[source,console]
----
$ git config --global user.name "John Doe"
$ git config --global user.email johndoe@example.com
----

Xin nhắc lại là việc này chỉ cần phải làm một lần duy nhất nếu như sử dụng tùy chọn `--global`, bởi vì từ thời điểm đó, Git sẽ sử dụng các thông tin đó cho tất cả những gì bạn làm trên hệ thống.
Nếu bạn muốn sử dụng tên và địa chỉ e-mail khác cho một dự án riêng biệt nào đó, bạn có thể chạy lại lệnh trên không sử dụng tùy chọn `--global` khi bạn đang đứng ở trong dự án đó.

Rất nhiều công cụ với giao diện đồ họa sẽ yêu cầu bạn làm điều này nếu bạn sử dụng lần đầu.

==== Trình Soạn Thảo Văn Bản

Bây giờ, danh tính của bạn đã được cấu hình xong, bạn có thể lựa chọn trình soạn thảo văn bản mặc định sử dụng để soạn thảo các thông điệp.
Mặc định, Git sử dụng trình soạn thảo mặc định của hệ thống.

Nếu bạn muốn sử dụng một trình soạn thảo khác, ví dụ như Emacs, bạn có thể làm như sau:

[source,console]
----
$ git config --global core.editor emacs
----

Trong Windows, nếu bạn muốn dùng trình soạn thảo khác, như Notepad++, hãy làm như sau:

Với hệ thống x86 (Windows 32)
[source,console]
----
$ git config --global core.editor "'C:/Program Files/Notepad++/notepad++.exe' -multiInst -nosession"
----
Với hệ thống x64 (Windows 64)
[source,console]
----
$ git config --global core.editor "'C:/Program Files (x86)/Notepad++/notepad++.exe' -multiInst -nosession"
----

[NOTE]
====
Vim, Emacs and Notepad++ là những trình soạn thảo văn bản thông dụng được sử dụng bởi các lập trình viên trên các hệ thống dựa trên Unix như Linux và OS X hoặc hệ thống Windows.
Nếu như bạn không thành thạo với những trình soạn thảo văn bản đó, bạn có thể cần phải tìm hiểu hướng dẫn chi tiết cách để thiết lập trình soạn thảo yêu thích của bạn với Git.
====

[WARNING]
====
Bạn có thể nhận ra rằng, nếu bạn không cấu hình một trình soạn thảo văn bản như vậy, bạn có thể sẽ gặp phải một tình huống rất phức tạp khi mà chúng được gọi lên.
Một ví dụ cụ thể trên Windows có thể bao gồm cả việc Git dừng hoạt động quá sớm trong quá trình khởi động việc chỉnh sửa nào đó.
====

==== Kiểm Tra Cấu Hình Đã Thiết Lập

Trong trường hợp bạn muốn kiểm tra các cấu hình cài đặt, bạn có thể sử dụng lệnh `git config --list` để liệt kê toàn bộ cấu hình của Git vào thời điểm đó:

[source,console]
----
$ git config --list
user.name=John Doe
user.email=johndoe@example.com
color.status=auto
color.branch=auto
color.interactive=auto
color.diff=auto
...
----

Bạn có thể thấy các từ khoá xuất hiện nhiều hơn một lần, bởi vì Git đọc chúng từ các tập tin khác nhau (ví dụ như `/etc/gitconfig` và `~/.gitconfig`).
Trong trường hợp này Git sử dụng giá trị xuất hiện cuối cùng cho mỗi từ khoá.

Bạn cũng có thể kiểm tra giá trị của một từ khoá riêng biệt nào đó bằng cách gọi lệnh `git config <key>`:(((git commands, config)))

[source,console]
----
$ git config user.name
John Doe
----
