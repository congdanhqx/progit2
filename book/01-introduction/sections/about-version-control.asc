=== Giới thiệu về Quản lý Phiên bản

(((version control)))
"Quản lý phiên bản" là gì, và tại sao bạn nên quan tâm?
Quản lý phiên bản là một hệ thống lưu trữ các thay đổi tới một tập tin (file) hoặc một số tập tin theo thời gian, theo đó, sau này, bạn có thể lấy lại một phiên bản nào đó.
Mặc dù các ví dụ trong cuốn sách này chỉ sử dụng các tập tin là mã nguồn của phần mềm làm đối tượng để quản lý phiên bản, nhưng trong thực tế, bạn có thể làm việc này với gần như toàn bộ tất cả các loại tập tin trong máy tính.

Nếu bạn là một người thiết kế đồ họa hay thiết kế web, và bạn muốn lưu giữ tất cả phiên bản của một hình ảnh hay bố cục (chắc chắn bạn muốn điều này), thì một hệ thống quản lý phiên bản (VCS) là một lựa chọn khôn ngoan.
Nó cho phép bạn: khôi phục các tập tin trở lại trạng thái trước đó, khôi phục toàn bộ dự án về trạng thái trước đó, xem lại sự thay đổi qua thời gian, xem ai là người cuối cùng thay đổi một số thứ mà nó có thể gây ra vấn đề, ai gây ra vấn đề, vấn đề xảy ra khi nào và nhiều hơn thế nữa.
Sử dụng VCS còn đồng nghĩa với việc nếu bạn làm rối tung mọi thứ lên, hoặc bạn xóa mất thứ gì đó, bạn có thể dễ dàng lấy lại được.
Thêm vào đó, tất cả những chuyện này rất là đơn giản.

==== Hệ Thống Quản Lý Phiên Bản Cục Bộ

(((version control,local)))
Nhiều người chọn cách quản lý phiên bản bằng cách sao chép các tập tin sang các thư mục khác (có thể là thư mục được đặt tên theo thời gian, nếu họ thông minh).
Cách này rất là thông dụng bởi vì nó rất đơn giản, nhưng nó cũng dễ gây ra lỗi.
Bạn sẽ rất dễ dàng quên bạn đang ở thư mục nào và đôi khi bạn vô tình sửa nhầm tập tin hoặc chép đè lên các tập tin không mong muốn.

Để giải quyết vấn đề này, từ lâu các lập trình viên đã phát triển các phiên bản VCS cục bộ có chứa một cơ sở dữ liệu đơn giản lưu trữ tất cả các sự thay đổi của các tập tin dưới sự kiểm soát thay đổi

.Quản lý phiên bản cục bộ.
image::images/local.png[Mô hình quản lý phiên bản cục bộ]

Một trong những hệ thống quản lý phiên bản phổ biến nhất có tên là rcs vẫn còn được sử dụng ở nhiều máy tính cho tới bây giờ.
Ngay cả hệ điều hành Mac OS X nổi tiếng cũng đưa vào các lệnh `rcs` khi bạn cài đặt Developer Tools (Các công cụ dành cho lập trình viên).
RCS này hoạt động bằng cách lưu giữ các bản vá (những sự thay đổi giữa các tập tin) từ phiên bản này qua phiên bản khác ở một định dạng đặc biệt được lưu trên ổ đĩa; nó có thể tái tạo lại bất kỳ tập tin nào ở bất kỳ thời điểm nào bằng cách gộp tất cả các bản vá lại với nhau.

==== Hệ Thống Quản Lý Phiên Bản Tập Trung

(((version control,centralized)))
Vấn đề quan trọng tiếp theo mà mọi người thường gặp là họ cần cộng tác với các lập trình viên khác trong hệ thống.
Để vượt qua trở ngại này, Hệ Thống Quản Lý Phiên Bản Tập Trung (Centralized Version Control Systems - CVCSs) được phát triển.
Các hệ thống này, ví dụ như CVS, Subversion, và Perforce, bao gồm một máy chủ có chứa tất cả các tập tin đã được đánh phiên bản (versioned), và danh sách các máy khách có quyền lấy các tập tin này trên máy chủ trung tâm đó. (((CVS)))(((Subversion)))(((Perforce)))
Trong vòng nhiều năm, mô hình này đã trở thành tiêu chuẩn cho việc quản lý phiên bản.

.Quản lý phiên bản tập trung.
image::images/centralized.png[Mô hình quản lý phiên bản tập trung]

Mô hình này cung cấp rất nhiều lợi thế, đặc biệt so với việc quản lý cục bộ.
Ví dụ, tất cả người dùng đều biết một phần nào đó những việc mà những người khác trong dự án đang làm.
Người quản lý có quyền cấp quyền ai có thể làm gì; và việc này dễ dàng hơn nhiều so với việc phải quản lý ở từng cơ sở dử liệu ở từng máy riêng biệt.

Tuy nhiên, mô hình này cũng có những bất cập nghiêm trọng
Dễ nhận thấy nhất đó là nếu máy chủ trung tâm gặp sự cố, toàn hệ thống không thể hoạt động.
Nếu máy chủ không hoạt động trong một giờ, thì trong khoảng một giờ đó không ai có thể cộng tác với những người còn lại, không ai có thể lưu trữ các thay đổi.
Nếu như ổ cứng chứa cơ sở dữ liệu trung tâm bị hỏng, và các sao lưu dự phòng cần thiết chưa được lưu trữ, bạn sẽ mất toàn bộ lịch sử của dự án đó, ngoại trừ những phiên bản cục bộ mà người dùng có được trên máy tính cá nhân.
Các hệ thống quản lý phiên bản cục bộ phải đối diện với vấn đề tương tự như thế, nếu như toàn bộ lịch sử của dự án được lưu ở một nơi, bạn có nguy cơ mất tất cả.

==== Hệ Thống Quản Lý Phiên Bản Phân Tán

(((version control,distributed)))
Đây chính là lúc cần tới các Hệ Thống Quản Lý Phiên Bản Phân Tán (Distributed Version Control Systems - DVCSs).
Trong các DVCS (ví dụ như Git, Mercurial, Bazaar hay Darcs), các máy khách không chỉ lấy phiên bản mới nhất của các tập tin: chúng sao chép (mirror) toàn bộ kho chứa (repository).
Chính vì vậy, nếu bất kỳ máy chủ nào sập, thì chỉ cần sao chép bất kỳ kho chứa nào từ bất kỳ máy khách nào cũng có thể khôi phục lại toàn bộ hệ thống.
Mỗi bản sao thực sự là một bản dự phòng đầy đủ của tất cả dữ liệu.

.Quản lý phiên bản phân tán.
image::images/distributed.png[Mô hình quản lý phiên bản phân tán]

Hơn nữa, phần lớn các hệ thống này xử lý rất tốt việc quản lý nhiều kho chứa từ xa, vì thế bạn có thể cộng tác với nhiều nhóm người khác nhau theo những cách khác nhau trong cùng một dự án
Việc này cho phép bạn cài đặt nhiều loại quy trình khác nhau mà chúng không thể nào thực hiện được trong các hệ thống tập trung, ví dụ như các mô hình phân cấp.
